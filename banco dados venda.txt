UPDATE DEBITOS D
SET D.SITUACAO_DEBITO = 'Atrasado'
WHERE D.DATAVENCIMENTO < CURRENT_DATE
	AND D.SITUACAO_DEBITO <> 'Negociado'
	AND D.SITUACAO_DEBITO <> 'Pago'
	
UPDATE DEBITOS D
SET D.SITUACAO_DEBITO = 'Pendente'
WHERE D.DATAVENCIMENTO > CURRENT_DATE
	AND D.SITUACAO_DEBITO <> 'Pago'
	
UPDATE DEBITOS D
SET DATAVENCIMENTO = DATEADD(YEAR, -5, DATAVENCIMENTO)
WHERE D.SITUACAO_DEBITO = 'Negociado'

SELECT P.NOME, P.EMAIL, P.TELEFONE 
	FROM PESSOA p

SELECT p.NOME
	FROM PRODUTO p
WHERE p.PRECO_UNITARIO > 100

SELECT v.ID_VENDA
	FROM VENDA v
WHERE v.DATA_VENDA = '2022-06-12'

SELECT p.NOME, p.DATA_NASCIMENTO, EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM p.DATA_NASCIMENTO) AS IDADE
FROM FORNECEDOR f 
JOIN PESSOA p ON f.ID_PESSOA = p.ID_PESSOA
LEFT JOIN PRODUTO p2 ON f.ID_FORNECEDOR = p2.ID_FORNECEDOR
WHERE p2.ID_FORNECEDOR IS NULL

SELECT c.ID_CLIENTE
FROM CLIENTE c 
WHERE c.ID_CLIENTE IN (SELECT d.ID_CLIENTE FROM DEBITOS d WHERE d.SITUACAO_DEBITO LIKE 'Atrasado')



 SELECT FIRST 10 C.ID_CLIENTE
     , P.NOME
     , P.DATA_NASCIMENTO
     , EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM P.DATA_NASCIMENTO) AS IDADE
     , COALESCE((SELECT SUM(D.VALOR_TOTAL) 
           FROM DEBITOS D 
          WHERE D.ID_CLIENTE = C.ID_CLIENTE
            AND D.DATAVENCIMENTO < CURRENT_DATE),0) DEBITO_PENDENTES
  FROM CLIENTE C 
  LEFT JOIN PESSOA P  ON P.ID_PESSOA   = C.ID_PESSOA 
  ORDER BY 5 DESC

UPDATE PRODUTO p
SET p.PRECO_UNITARIO = p.PRECO_UNITARIO * 1.1
WHERE p.QUANTIDADE_ESTOQUE < 10

UPDATE DEBITOS d
SET d.SITUACAO_DEBITO = 'Pago'
WHERE d.SITUACAO_DEBITO = 'Atrasado'
AND d.ID_DEBITO IN (SELECT p.ID_DEBITO FROM PAGAMENTO p)

SELECT v.*
FROM VENDA v
WHERE v.DATA_VENDA BETWEEN '2023-12-01' AND '2024-01-31'

SELECT p.*
FROM PRODUTO p
WHERE p.QUANTIDADE_ESTOQUE BETWEEN 5 AND 20

SELECT p.*
FROM PESSOA p 
WHERE p.NOME LIKE 'A%'

SELECT p.*
FROM PRODUTO p 
WHERE ID_PRODUTO NOT IN (SELECT i.ID_PRODUTO FROM ITENSVENDA i)

SELECT p.NOME, prod.NOME, iv.QUANTIDADE, iv.VALOR_UNITARIO
FROM CLIENTE c
JOIN PESSOA p ON c.ID_PESSOA = p.ID_PESSOA
JOIN VENDA v ON v.ID_PESSOA = c.ID_PESSOA
JOIN ITENSVENDA iv ON iv.ID_VENDA = v.ID_VENDA
JOIN PRODUTO prod ON iv.ID_PRODUTO = prod.ID_PRODUTO
WHERE p.NOME IN ('Carla Souza', 'Larissa Ferreira')

SELECT DISTINCT p.ID_PESSOA, p.NOME, p.EMAIL, p.TELEFONE
FROM PESSOA p
LEFT JOIN CLIENTE c ON p.ID_PESSOA = c.ID_PESSOA
LEFT JOIN FORNECEDOR f ON p.ID_PESSOA = f.ID_PESSOA
WHERE c.ID_CLIENTE IS NOT NULL OR f.ID_FORNECEDOR IS NOT NULL

SELECT *
FROM VENDA v
JOIN CLIENTE c ON v.ID_PESSOA = c.ID_PESSOA
JOIN PESSOA p ON c.ID_PESSOA = p.ID_PESSOA
JOIN FORMA_PAGAMENTO fp ON v.ID_FORMA_PAGAMENTO = fp.ID_FORMA_PAGAMENTO

SELECT *
FROM ITENSVENDA i
JOIN VENDA v ON i.ID_VENDA = v.ID_VENDA
JOIN PRODUTO p ON i.ID_PRODUTO = p.ID_PRODUTO
WHERE p.NOME = 'Placa de Captura'

SELECT CAST('Cliente' AS varchar(10)) AS tipo, p.NOME, p.ID_PESSOA, (2025 - EXTRACT(YEAR FROM p.DATA_NASCIMENTO))
FROM PESSOA p
INNER JOIN CLIENTE c ON c.ID_PESSOA = p.ID_PESSOA
UNION
SELECT CAST('Fornecedor' AS varchar(10)) AS tipo, p2.NOME, p2.ID_PESSOA, (2025 - EXTRACT(YEAR FROM p2.DATA_NASCIMENTO))
FROM FORNECEDOR f
INNER JOIN PESSOA p2 ON p2.ID_PESSOA = f.ID_PESSOA

SELECT b.CEP, b.ID_MUNICIPIO, l.NOME, p.NOME
FROM ENDERECO e
LEFT JOIN BAIRRO b ON b.ID_BAIRRO = e.ID_BAIRRO
LEFT JOIN LOGRADOURO l ON l.ID_LOGRADOURO = e.ID_LOGRADOURO
LEFT JOIN PESSOA p ON p.ID_PESSOA = e.ID_PESSOA

SELECT p.*
FROM PRODUTO p
WHERE p.PRECO_UNITARIO > (SELECT AVG(PRECO_UNITARIO) FROM PRODUTO)

SELECT DISTINCT c.*
FROM CLIENTE c
JOIN PESSOA p ON c.ID_PESSOA = p.ID_PESSOA
JOIN ENDERECO e ON p.ID_PESSOA = e.ID_PESSOA
JOIN MUNICIPIO m ON e.ID_MUNICIPIO = m.ID_MUNICIPIO
JOIN VENDA v ON p.ID_PESSOA = v.ID_PESSOA
WHERE m.POPULACAO > 1000000

SELECT f.ID_PESSOA AS FORNECEDOR, SUM(iv.QUANTIDADE) AS TOTAL_PRODUTOS_VENDIDOS
FROM FORNECEDOR f
JOIN PRODUTO p ON f.ID_FORNECEDOR = p.ID_FORNECEDOR
JOIN ITENSVENDA iv ON p.ID_PRODUTO = iv.ID_PRODUTO
GROUP BY f.ID_PESSOA

SELECT c.ID_CLIENTE AS CLIENTE, SUM(v.VALOR_TOTAL) AS VALOR_TOTAL_COMPRAS
FROM CLIENTE c
JOIN VENDA v ON c.ID_PESSOA = v.ID_PESSOA
GROUP BY c.ID_CLIENTE
HAVING SUM(v.VALOR_TOTAL) > 500

SELECT p.NOME, e.TIPO_ENDERECO AS TIPO_ENDERECO, e.ID_LOGRADOURO , e.NUMERO
FROM PESSOA p
LEFT JOIN ENDERECO e ON p.ID_PESSOA = e.ID_PESSOA

SELECT p.NOME AS PRODUTO, p.PRECO_UNITARIO, f.ID_FORNECEDOR AS FORNECEDOR
FROM PRODUTO p
LEFT JOIN FORNECEDOR f ON p.ID_FORNECEDOR = f.ID_FORNECEDOR

SELECT NOME, QUANTIDADE_ESTOQUE
FROM PRODUTO
ORDER BY QUANTIDADE_ESTOQUE DESC

SELECT ID_VENDA, DATA_VENDA, VALOR_TOTAL
FROM VENDA
ORDER BY VALOR_TOTAL ASC

SELECT NOME, QUANTIDADE_ESTOQUE
FROM PRODUTO
WHERE QUANTIDADE_ESTOQUE < (SELECT AVG(QUANTIDADE_ESTOQUE) FROM PRODUTO)

SELECT p1.NOME AS PESSOA1, p2.NOME AS PESSOA2, p1.TELEFONE
FROM PESSOA p1
JOIN PESSOA p2 ON p1.TELEFONE = p2.TELEFONE AND p1.ID_PESSOA <> p2.ID_PESSOA

UPDATE PRODUTO p
SET p.PRECO_UNITARIO = p.PRECO_UNITARIO * 1.10
WHERE p.ID_FORNECEDOR IN (
    SELECT f.ID_FORNECEDOR
    FROM FORNECEDOR f
    JOIN ENDERECO e ON f.ID_PESSOA = e.ID_PESSOA
    WHERE e. = 'SÃ£o Paulo'
)
SELECT v.ID_VENDA, v.DATA_VENDA, d.SITUACAO_DEBITO
FROM VENDA v
JOIN DEBITOS d ON v.ID_VENDA = d.ID_VENDA
WHERE d.SITUACAO_DEBITO = 'Negociado'